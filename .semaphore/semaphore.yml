version: v1.0

name: Test

agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804

blocks:

  - name: "Test on Ubuntu 18.04 LTS"
    dependencies: []
    task:
      prologue:
        commands:
          - checkout
      jobs:
        - name: test
          matrix:
            - env_var: GCC_VERSION
              values: [ "6", "7", "8" ]
            - env_var: CONFIG
              values: [ "debug", "release", "memorycheck" ]
            - env_var: PLATFORM
              values: [ "portable", "x64", "avx", "avx2" ]
          commands:
            - curl -L https://github.com/premake/premake-core/releases/download/v5.0.0-alpha14/premake-5.0.0-alpha14-linux.tar.gz | tar -xvz
            - chmod +x premake5
            - ./premake5 gmake
            - sem-version c $GCC_VERSION
            - gcc --version
            - make -j32 config=${CONFIG}_${PLATFORM}
            - ./bin/test

  - name: "Test on Ubuntu 20.04 LTS"
    dependencies: []
    task:
      prologue:
        commands:
          - checkout
      agent:
        machine:
          type: e1-standard-8
          os_image: ubuntu2004
      jobs:
        - name: test
          matrix:
            - env_var: CONFIG
              values: [ "debug", "release", "memorycheck" ]
            - env_var: PLATFORM
              values: [ "portable", "x64", "avx", "avx2" ]
          commands:
            - curl -L https://github.com/premake/premake-core/releases/download/v5.0.0-alpha14/premake-5.0.0-alpha14-linux.tar.gz | tar -xvz
            - chmod +x premake5
            - ./premake5 gmake
            - gcc --version
            - make -j32 config=${CONFIG}_${PLATFORM}
            - ./bin/test

  - name: "Test on MacOS"
    dependencies: []
    task:
      prologue:
        commands:
          - checkout
      agent:
        machine:
          type: a1-standard-4
          os_image: macos-xcode14
      jobs:
        - name: test
          matrix:
            - env_var: CONFIG
              values: [ "debug_portable", "release_portable" ]
          commands:
            - brew install premake
            - premake5 gmake
            - make -j32 config=$CONFIG
            - ./bin/test

  - name: "Soak Test"
    dependencies: []
    task:
      prologue:
        commands:
          - checkout
      agent:
        machine:
          type: e1-standard-8
          os_image: ubuntu2004
      jobs:
        - name: test
          matrix:
            - env_var: CONFIG
              values: [ "memorycheck_portable" ]
          commands:
            - curl -L https://github.com/premake/premake-core/releases/download/v5.0.0-alpha14/premake-5.0.0-alpha14-linux.tar.gz | tar -xvz
            - chmod +x premake5
            - ./premake5 gmake
            - gcc --version
            - make -j32 config=$CONFIG soak
            - ./bin/soak 60

  - name: "Fuzz Test"
    dependencies: []
    task:
      prologue:
        commands:
          - checkout
      agent:
        machine:
          type: e1-standard-8
          os_image: ubuntu2004
      jobs:
        - name: test
          matrix:
            - env_var: CONFIG
              values: [ "memorycheck_portable" ]
          commands:
            - curl -L https://github.com/premake/premake-core/releases/download/v5.0.0-alpha14/premake-5.0.0-alpha14-linux.tar.gz | tar -xvz
            - chmod +x premake5
            - ./premake5 gmake
            - gcc --version
            - make -j32 config=$CONFIG fuzz
            - ./bin/fuzz 60

  - name: "Test on Windows"
    dependencies: []
    task:
      prologue:
        commands:
          - checkout
      agent:
        machine:
          type: s1-consoles
      jobs:

        - name: test (debug)
          commands:
            - & premake5 vs2019
            - & devenv visualstudio/next.sln /Build debug
            - & ./bin/test
        
        - name: test (release)
          commands:
            - & premake5 vs2019
            - & devenv visualstudio/next.sln /Build release
            - & ./bin/test
        
        - name: test (memorycheck)
          commands:
            - & premake5 vs2019
            - & devenv visualstudio/next.sln /Build memorycheck
            - & ./bin/test

  - name: "Windows"
    dependencies: []
    task:
      prologue:
        commands:
          - checkout
      agent:
        machine:
          type: s1-consoles
      jobs:

        - name: win32 debug
          commands:
            - & devenv build/win32/win32.sln /Build Debug

        - name: win32 release
          commands:
            - & devenv build/win32/win32.sln /Build Release

        - name: win64 debug
          commands:
            - & devenv build/win64/win64.sln /Build Debug

        - name: win64 release
          commands:
            - & devenv build/win64/win64.sln /Build Release

  - name: "Playstation"
    dependencies: []
    task:
      prologue:
        commands:
          - checkout
      agent:
        machine:
          type: s1-consoles
      jobs:
        - name: ps4 debug
          commands:
            - & devenv build/ps4/ps4.sln /Build Debug

        - name: ps4 release
          commands:
            - & devenv build/ps4/ps4.sln /Build Release

        - name: ps5 debug
          commands:
            - & devenv build/ps5/ps5.sln /Build Debug

        - name: ps5 release
          commands:
            - & devenv build/ps5/ps5.sln /Build Release

  - name: "Nintendo"
    dependencies: []
    task:
      prologue:
        commands:
          - checkout
      agent:
        machine:
          type: s1-consoles
      jobs:
        - name: switch debug
          commands:
            - & devenv build/switch/switch.sln /Build Debug

        - name: switch release
          commands:
            - & devenv build/switch/switch.sln /Build Release

  - name: "Xbox"
    dependencies: []
    task:
      prologue:
        commands:
          - checkout
      agent:
        machine:
          type: s1-consoles
      jobs:
        - name: xbox debug
          commands:
            - & devenv build/gdk/gdk.sln /Build Debug

        - name: xbox release
          commands:
            - & devenv build/gdk/gdk.sln /Build Release
